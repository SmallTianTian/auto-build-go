package grpc

import (
	"context"

	v1 "{{.module}}/api/demo/v1"
	"google.golang.org/grpc/peer"
	"google.golang.org/protobuf/types/known/emptypb"
)

type V1DemoService struct {
	v1.UnimplementedDemoServiceServer
}

func NewV1DemoService() *V1DemoService {
	return &V1DemoService{}
}

func (d *V1DemoService) Ping(ctx context.Context, empty *emptypb.Empty) (*emptypb.Empty, error) {
	return &emptypb.Empty{}, nil
}

func (d *V1DemoService) IP(ctx context.Context, empty *emptypb.Empty) (*v1.IPResponse, error) {
	if p, in := peer.FromContext(ctx); in {
		return &v1.IPResponse{Ip: p.Addr.String()}, nil
	}
	return &v1.IPResponse{Ip: "UNKNOW"}, nil
}
