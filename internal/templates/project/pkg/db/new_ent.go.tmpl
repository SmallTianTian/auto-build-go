package db

import (
	"entgo.io/ent/dialect/sql"
	"go.uber.org/zap"

	"time"

	"{{.module}}/ent"
	"{{.module}}/internal/conf"
	"github.com/google/wire"
)

func NewEntClient(c *conf.Config, log *zap.Logger) (*ent.Client, func(), error) {
	drv, err := sql.Open(c.DB.Dialect, c.DB.ConnStr)
	if err != nil {
		return nil, nil, err
	}
	// 获取数据库驱动中的sql.DB对象。
	db := drv.DB()

	if err = db.Ping(); err != nil {
		return nil, nil, err
	}

	db.SetMaxIdleConns(c.DB.MaxIdle)
	db.SetMaxOpenConns(c.DB.MaxOpen)
	db.SetConnMaxLifetime(time.Duration(c.DB.MaxLifeTime) * time.Second)
	db.SetConnMaxIdleTime(time.Duration(c.DB.MaxIdle) * time.Second)
	client := ent.NewClient(ent.Driver(drv))

	close := func() {
		if err := client.Close(); err != nil {
			log.Error("Close db failed.", zap.Error(err))
		}
	}

	return client, close, nil
}

var DBSet = wire.NewSet(NewEntClient)
